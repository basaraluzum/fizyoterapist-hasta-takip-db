CREATE TABLE Client (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    name VARCHAR2(20) NOT NULL, 
    surname VARCHAR2(20) NOT NULL, 
    birthday DATE NOT NULL, 
    record_date DATE NOT NULL, 
    sex NUMBER(1) NOT NULL, -- Boolean için 1 veya 0 kullanılır
    email VARCHAR2(255),
    phone VARCHAR2(20),
    treatment_status NUMBER(1) DEFAULT 0 -- Tedavi durumu (0: Başlamamış, 1: Başlamış)
);

CREATE TABLE Treatment (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    client_id INT NOT NULL,
    treatment_header VARCHAR2(50),
    treatment VARCHAR2(500),
    treatment_start DATE NOT NULL,
    treatment_end DATE,
    diagnosis_header VARCHAR2(50),
    diagnosis VARCHAR2(500),
    CONSTRAINT fk_client_id FOREIGN KEY (client_id) REFERENCES Client(id) ON DELETE CASCADE
);

CREATE TABLE Unit (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    unit_name VARCHAR2(10) NOT NULL
);

CREATE TABLE Medicine (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    medicine_name VARCHAR2(100) NOT NULL,
    stock INT NOT NULL,
    unit_id INT,
    CONSTRAINT fk_unit_id FOREIGN KEY (unit_id) REFERENCES Unit(id) ON DELETE SET NULL
);

CREATE TABLE Medicine_Treatment (
    treatment_id INT NOT NULL,
    medicine_id INT NOT NULL,
    amount_of_usage INT DEFAULT 1,
    CONSTRAINT pk_medicine_treatment PRIMARY KEY (treatment_id, medicine_id),
    CONSTRAINT fk_treatment_id FOREIGN KEY (treatment_id) REFERENCES Treatment(id) ON DELETE CASCADE,
    CONSTRAINT fk_medicine_id FOREIGN KEY (medicine_id) REFERENCES Medicine(id) ON DELETE CASCADE
);

CREATE TABLE Method (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    method_name VARCHAR2(100) NOT NULL,
    implement_time DATE NOT NULL
);

CREATE TABLE Method_Treatment (
    treatment_id INT NOT NULL,
    method_id INT NOT NULL,
    implement_count INT DEFAULT 1,
    CONSTRAINT pk_method_treatment PRIMARY KEY (treatment_id, method_id),
    CONSTRAINT fk_treatment_method_id FOREIGN KEY (treatment_id) REFERENCES Treatment(id) ON DELETE CASCADE,
    CONSTRAINT fk_method_id FOREIGN KEY (method_id) REFERENCES Method(id) ON DELETE CASCADE
);





CREATE TABLE Client (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    name VARCHAR2(20) NOT NULL, 
    surname VARCHAR2(20) NOT NULL, 
    birthday DATE NOT NULL, 
    record_date DATE NOT NULL, 
    sex NUMBER(1) NOT NULL, -- Boolean için 1 veya 0 kullanılır
    email VARCHAR2(255),
    phone VARCHAR2(20),
    treatment_status NUMBER(1) DEFAULT 0 -- Tedavi durumu (0: Başlamamış, 1: Başlamış)
);

CREATE TABLE Treatment (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    client_id INT NOT NULL,
    treatment_header VARCHAR2(50),
    treatment VARCHAR2(500),
    treatment_start DATE NOT NULL,
    treatment_end DATE,
    diagnosis_header VARCHAR2(50),
    diagnosis VARCHAR2(500),
    CONSTRAINT fk_client_id FOREIGN KEY (client_id) REFERENCES Client(id) ON DELETE CASCADE
);

CREATE TABLE Unit (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    unit_name VARCHAR2(10) NOT NULL
);

CREATE TABLE Medicine (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    medicine_name VARCHAR2(100) NOT NULL,
    stock INT NOT NULL,
    unit_id INT,
    CONSTRAINT fk_unit_id FOREIGN KEY (unit_id) REFERENCES Unit(id) ON DELETE SET NULL
);

CREATE TABLE Medicine_Treatment (
    treatment_id INT NOT NULL,
    medicine_id INT NOT NULL,
    amount_of_usage INT DEFAULT 1,
    CONSTRAINT pk_medicine_treatment PRIMARY KEY (treatment_id, medicine_id),
    CONSTRAINT fk_treatment_id FOREIGN KEY (treatment_id) REFERENCES Treatment(id) ON DELETE CASCADE,
    CONSTRAINT fk_medicine_id FOREIGN KEY (medicine_id) REFERENCES Medicine(id) ON DELETE CASCADE
);

CREATE TABLE Method (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    method_name VARCHAR2(100) NOT NULL,
    implement_time DATE NOT NULL
);

CREATE TABLE Method_Treatment (
    treatment_id INT NOT NULL,
    method_id INT NOT NULL,
    implement_count INT DEFAULT 1,
    CONSTRAINT pk_method_treatment PRIMARY KEY (treatment_id, method_id),
    CONSTRAINT fk_treatment_method_id FOREIGN KEY (treatment_id) REFERENCES Treatment(id) ON DELETE CASCADE,
    CONSTRAINT fk_method_id FOREIGN KEY (method_id) REFERENCES Method(id) ON DELETE CASCADE
);


-- Unit Tablosuna Veri Ekleme
BEGIN
    FOR i IN 1..50 LOOP
        INSERT INTO Unit (unit_name) 
        VALUES ('Unit_' || i);
    END LOOP;
END;
/

-- Client Tablosuna Veri Ekleme
BEGIN
    FOR i IN 1..50 LOOP
        INSERT INTO Client (name, surname, birthday, record_date, sex, email, phone, treatment_status)
        VALUES ('Name_' || i, 
                'Surname_' || i, 
                TO_DATE('1980-01-01', 'YYYY-MM-DD') + (i * 365), 
                SYSDATE, 
                CASE WHEN MOD(i, 2) = 0 THEN 1 ELSE 0 END, 
                'email' || i || '@example.com', 
                '555-000' || i, 
                0);
    END LOOP;
END;
/

-- Treatment Tablosuna Veri Ekleme
BEGIN
    FOR i IN 1..50 LOOP
        DECLARE
            v_client_id INT;
        BEGIN
            -- Client ID'yi alalım
            SELECT id INTO v_client_id
            FROM (
                SELECT id, ROW_NUMBER() OVER (ORDER BY id) AS row_num
                FROM Client
            )
            WHERE row_num = i;

            -- Treatment verisini ekleyelim
            INSERT INTO Treatment (client_id, treatment_header, treatment, treatment_start, treatment_end, diagnosis_header, diagnosis)
            VALUES (v_client_id, 
                    'Treatment_Header_' || i, 
                    'Treatment_' || i, 
                    SYSDATE - (i * 10), 
                    SYSDATE + (i * 30), 
                    'Diagnosis_Header_' || i, 
                    'Diagnosis_' || i);
        END;
    END LOOP;
END;
/

-- Medicine Tablosuna Veri Ekleme
BEGIN
    FOR i IN 1..50 LOOP
        DECLARE
            v_unit_id INT;
        BEGIN
            -- Unit ID'yi alalım
            SELECT id INTO v_unit_id
            FROM (
                SELECT id, ROW_NUMBER() OVER (ORDER BY id) AS row_num
                FROM Unit
            )
            WHERE row_num = MOD(i, 5) + 1;

            -- Medicine verisini ekleyelim
            INSERT INTO Medicine (medicine_name, stock, unit_id)
            VALUES ('Medicine_' || i, 
                    100 + (i * 10), 
                    v_unit_id);
        END;
    END LOOP;
END;
/

-- Medicine_Treatment Tablosuna Veri Ekleme
BEGIN
    FOR i IN 1..50 LOOP
        DECLARE
            v_treatment_id INT;
            v_medicine_id INT;
        BEGIN
            -- Treatment ID'yi alalım
            SELECT id INTO v_treatment_id
            FROM (
                SELECT id, ROW_NUMBER() OVER (ORDER BY id) AS row_num
                FROM Treatment
            )
            WHERE row_num = i;

            -- Medicine ID'yi alalım
            SELECT id INTO v_medicine_id
            FROM (
                SELECT id, ROW_NUMBER() OVER (ORDER BY id) AS row_num
                FROM Medicine
            )
            WHERE row_num = MOD(i, 10) + 1;

            -- Medicine_Treatment verisini ekleyelim
            INSERT INTO Medicine_Treatment (treatment_id, medicine_id, amount_of_usage)
            VALUES (v_treatment_id, v_medicine_id, 1);
        END;
    END LOOP;
END;
/

-- Method Tablosuna Veri Ekleme
BEGIN
    FOR i IN 1..10 LOOP
        -- Method verisini ekleyelim
        INSERT INTO Method (method_name, implement_time)
        VALUES ('Method_' || i, SYSDATE + (i * 10));
    END LOOP;
END;
/

-- Method_Treatment Tablosuna Veri Ekleme
BEGIN
    FOR i IN 1..50 LOOP
        DECLARE
            v_treatment_id INT;
            v_method_id INT;
        BEGIN
            -- Treatment ID'yi alalım
            SELECT id INTO v_treatment_id
            FROM (
                SELECT id, ROW_NUMBER() OVER (ORDER BY id) AS row_num
                FROM Treatment
            )
            WHERE row_num = i;

            -- Method ID'yi alalım
            SELECT id INTO v_method_id
            FROM (
                SELECT id, ROW_NUMBER() OVER (ORDER BY id) AS row_num
                FROM Method
            )
            WHERE row_num = MOD(i, 10) + 1;

            -- Method_Treatment verisini ekleyelim
            INSERT INTO Method_Treatment (treatment_id, method_id, implement_count)
            VALUES (v_treatment_id, v_method_id, 1);
        END;
    END LOOP;
END;
/

